<project name="common" xmlns:ivy="antlib:org.apache.ivy.ant">
	<property file="${common.dir}/build.properties"/>
	<!-- <property file="build.properties" /> -->

	<property name="ivy.jar.dir" value="${wkspace.dir}/shared-lib/src/main/lib" />
	<property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />

	<target name="load-ivy">
		<mkdir dir="${ivy.jar.dir}" />
		<path id="ivy.lib.path">
			<fileset dir="${ivy.jar.dir}" includes="*.jar"/>
		</path>
		<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
	</target>

	<path id="lib.path.id">
		<fileset dir="${lib.dir}" />
	</path>
	<path id="run.path.id">
		<path refid="lib.path.id" />
		<path location="${classes.dir}" />
	</path>

	<!-- setup ivy default configuration with some custom info -->
	<property name="ivy.local.default.root" value="${repository.dir}/local"/>
	<property name="ivy.shared.default.root" value="${repository.dir}/shared"/>

	<!-- =================================
          target: compile
         ================================= -->
	<target name="compile" description="--> compile the project">
		<mkdir dir="${classes.dir}" />
		<javac srcdir="${src.dir}" destdir="${classes.dir}" classpathref="lib.path.id" debug="true" includeAntRuntime="false"/>
	</target>

	<!-- =================================
          target: jar
         ================================= -->
	<target name="jar" depends="compile" description="--> make a jar file for this project">
		<jar destfile="${jar.file}">
			<fileset dir="${classes.dir}" />
			<manifest>
				<attribute name="Built-By" value="${user.name}"/>
				<attribute name="Build-Version" value="${module.version.target}" />
			</manifest>
		</jar>
	</target>

	<!-- =================================
          target: publish
         ================================= -->
	<target name="publish" depends="clean-build, jar" description="--> publish this project in the ivy repository">
		<ivy:publish artifactspattern="${build.dir}/[artifact].[ext]"
    			           resolver="shared"
    			           pubrevision="${module.version.target}"
    			           status="release"
						   organisation="com.pilgrim-lifestyle"
						   module="${ant.project.name}"
						   revision="${module.version.target}"
    	/>
		<echo message="project ${ant.project.name} released with version ${module.version.target}" />
	</target>

	<!-- =================================
          target: publish-local
         ================================= -->
	<tstamp>
	 <format property="now" pattern="yyyyMMddHHmmss" />
	</tstamp>
	<target name="publish-local" depends="jar" description="--> publish this project in the local ivy repository">
		<ivy:publish artifactspattern="${build.dir}/[artifact].[ext]"
    			        resolver="local"
    			        pubrevision="${module.version.target}"
				        pubdate="${now}"
    			        status="integration"
    					forcedeliver="true"
						organisation="com.pilgrim-lifestyle"
						module="${ant.project.name}"
						revision="${module.version.target}"
    	/>
		<echo message="project ${ant.project.name} published locally with version ${module.version.target}" />
	</target>

	<!-- =================================
          target: clean-local
         ================================= -->
	<target name="clean-local" depends="load-ivy"
		description="--> cleans the local repository for the current module">
		<ivy:info file="${ivy.file}" />
		<delete dir="${ivy.local.default.root}/${ivy.organisation}/${ivy.module}"/>
	</target>

	<!-- =================================
          target: clean-lib
         ================================= -->
	<target name="clean-lib" description="--> clean the project libraries directory (dependencies)">
		<delete includeemptydirs="true" dir="${lib.dir}" excludes="ivy.jar"/>
	</target>

	<!-- =================================
          target: clean-build
         ================================= -->
	<target name="clean-build" description="--> clean the project built files">
		<delete includeemptydirs="true" dir="${build.dir}"/>
	</target>

	<!-- =================================
          target: clean
         ================================= -->
	<target name="clean" depends="clean-build, clean-lib" description="--> clean the project" />
</project>
